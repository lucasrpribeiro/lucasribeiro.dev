---
export interface Props {
  title: string
  description?: string
}

let { title, description } = Astro.props

const titleTemplate = () => {
  const siteName = 'Desenvolvedor Web'
  return title && title !== siteName ? `${title} - ${siteName}` : siteName
}
---

<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800;900&display=swap"
      rel="stylesheet"
    />
    <title>{titleTemplate()}</title>
    <meta name="description" content={description} />
  </head>
  <body class="bg-primary text-white">
    <slot />
  </body>

  <!-- I am LKs ¯\_( ͡❛ ͜ʖ ͡❛)_/¯ -->
</html>
<style is:global>
  :root {
    font-family: 'Inter', sans-serif;
    scroll-behavior: smooth;
  }
  ::selection {
    background: #f4f4f5;
    color: #121214;
  }
  ::-moz-selection {
    background: #f4f4f5;
    color: #121214;
  }

  @media (min-width: 1024px) {
    * {
    scrollbar-width: auto;
    scrollbar-color: #1c56b8 #ffffff10;
  }

  *::-webkit-scrollbar {
    width: 5px;
  }

  *::-webkit-scrollbar-track {
    background: #ffffff10;
  }

  *::-webkit-scrollbar-thumb {
    background-color: #1c56b8;
    border-radius: 12px;
    border: 0px none #fff;
  }
}
</style>
